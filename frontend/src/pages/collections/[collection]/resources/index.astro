---
import Layout from '@layouts/Layout.astro';
import Resources from '@components/Resources.astro';
import { getCollections, getCollection, getResources, CollectionPermission} from '@logic/data.ts';

const PAGE_SIZE = 50;

const token = Astro.request.headers.get('x-amzn-oidc-accesstoken');

let { collectionsData } = await getCollections(token);

const { collection: collectionId } = Astro.params;
const { collection, error } = await getCollection(collectionId || '', token);

const resourcesData = await getResources(collectionId || '', 1, PAGE_SIZE, token);

---

<Layout title={ 'Resources - ' + (collection?.name || error) } error={ error }>

  { !error &&
    <>

      <nav class="govuk-breadcrumbs govuk-!-margin-bottom-6" aria-label="Breadcrumb">
        <ol class="govuk-breadcrumbs__list">
          <li class="govuk-breadcrumbs__list-item">
            <a class="govuk-breadcrumbs__link" href="/">Collections</a>
          </li>
          <li class="govuk-breadcrumbs__list-item">
            Resources
          </li>
        </ol>
      </nav>

      <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">

          <h1 class="govuk-heading-l">Resources</h1>

          <p><strong>Collection:</strong> { collection.name }</p>

      { (collection.permissions.includes(CollectionPermission.MANAGE_RESOURCES) || collectionsData.is_admin) &&
        <a class="iai-button" href="resources/add">Add resource(s)</a>
      }

          <p class="govuk-body-l govuk-!-margin-top-5">Showing { resourcesData.total } resources</p>

      <div class="overflow-x-hidden w-full">
        <sortable-table>
          <table class="govuk-table">
            <caption class="govuk-visually-hidden">Files</caption>
            <thead class="govuk-table__head">
              <tr class="govuk-table__row">
                <th scope="col" class="govuk-table__header" aria-sort="ascending" data-sortable="true">Filename</th>
                <th scope="col" class="govuk-table__header" data-sortable="true">Type</th>
                <th scope="col" class="govuk-table__header" data-sortable="true">Created</th>
                { (collection.permissions.includes(CollectionPermission.MANAGE_RESOURCES) || collectionsData.is_admin) &&
                  <th scope="col" class="govuk-table__header">Actions</th>
                }
              </tr>
            </thead>
            <tbody class="govuk-table__body">
              {/* The 1st page of Resources are ready on page load. Additional pages are added via HTML Streaming */}
              <Resources resources={ resourcesData.resources } isManager={ collection.permissions.includes(CollectionPermission.MANAGE_RESOURCES) } />
              { Array.from({ length: Math.ceil(resourcesData.total / PAGE_SIZE) - 1 }).map((_, index) => (
                <Resources collection={ collectionId } page={ index + 2 } count={ PAGE_SIZE } token={ token } isManager={ collection.permissions.includes(CollectionPermission.MANAGE_RESOURCES) } />
              )) }
            </tbody>
          </table>
        </sortable-table>
      </div>

        </div>
      </div>

    </>
  }

  { error &&
    <p>Return to <a href="/">All Collections</a> page.</p>
  }

</Layout>

<script src="@components/sortable-table.ts"></script>
