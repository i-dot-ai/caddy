---
import Layout from '@layouts/Layout.astro';
import { getCollections, getCollection, getResources } from '@logic/data.ts';

const token = Astro.request.headers.get('x-amzn-oidc-accesstoken');

let { collectionsData } = await getCollections(token);

const { collection: collectionId } = Astro.params;

const { collection, error } = await getCollection(collectionId || '', token);

const resourcesData = await getResources(collectionId || '', 1, 9999, token);

---

<Layout title={'Add resources to ' + collection.name } error={ error }>

  <nav class="govuk-breadcrumbs govuk-!-margin-bottom-6" aria-label="Breadcrumb">
    <ol class="govuk-breadcrumbs__list">
      <li class="govuk-breadcrumbs__list-item">
        <a class="govuk-breadcrumbs__link" href="/">Collections</a>
      </li>
      <li class="govuk-breadcrumbs__list-item">
        <a class="govuk-breadcrumbs__link" href={ `/collections/${collectionId}` }>Documents</a>
      </li>
      <li class="govuk-breadcrumbs__list-item">
        Upload
      </li>
    </ol>
  </nav>


  <div class="govuk-grid-row upload-page">
    <div class="govuk-grid-column-full">

      <h1 class="govuk-heading-l">Add resource(s)</h1>

      <p><strong>Collection:</strong> { collection.name }</p>

      <form method="post" action="/api/upload/" enctype="multipart/form-data">
        <input type="hidden" value={ collectionId } name="collection"/>
        <div class="govuk-form-group">
          <h2 class="govuk-label-wrapper govuk-!-margin-top-8">
             <label class="govuk-label govuk-label--m" for="file-upload-1">Add file(s)</label>
          </h2>
          <div
            class="govuk-drop-zone"
            data-module="govuk-file-upload">
            <input class="govuk-file-upload" id="file-upload-1" name="fileUpload1" type="file" required multiple>
          </div>
        </div>
        <button class={ 'iai-button plausible-event-name=Add+Files plausible-event-collection=' + collection.name }>Add file(s)</button>
      </form>

      <form method="post" action="/api/add-urls/" enctype="multipart/form-data">
        <input type="hidden" value={ collectionId } name="collection"/>
        <div class="govuk-form-group">
          <h2 class="govuk-label-wrapper govuk-!-margin-top-7">
            <label class="govuk-label govuk-label--m" for="add-urls">Add URL(s)</label>
          </h2>
          <div id="add-urls-hint" class="govuk-hint">Add one URL per line</div>
          <textarea class="govuk-textarea rounded-sm!" id="add-urls" name="addUrls" rows="5" aria-describedby="add-urls-hint duplicates-warning"></textarea>
        </div>
        <duplicate-urls id="duplicates-warning" data-textarea="add-urls" data-existing-urls={ JSON.stringify(resourcesData.resources.filter(resource => resource.url).map(resource => resource.url) ) }>
          <div class="govuk-warning-text">
            <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
            <strong class="govuk-warning-text__text">
              <span class="govuk-visually-hidden">Important</span>
              Uploading a URL that already exists in this collection will result in it being overwritten.
            </strong>
          </div>
        </duplicate-urls>
        <add-urls>
          <button class="iai-button">Add URL(s)</button>
        </add-urls>
      </form>

      <upload-info input-name="fileUpload1" collection={ collectionId }></upload-info>

    </div>
  </div>

</Layout>


<script src="@components/add-urls.ts"></script>
<script src="@components/duplicate-urls.ts"></script>
<script src="@components/upload-info.ts"></script>


<style is:global>

  .upload-info:focus-visible {
    display: block;
    outline: 2px solid var(--iai-pink);
    outline-offset: 5px;
  }
  .upload-info .govuk-task-list__item {
    display: flex;
    justify-content: space-between;
  }
  .upload-info .govuk-task-list__name-and-hint {
    max-width: calc(100% - 120px);
    word-wrap: break-word;
  }
  .upload-page:has(.upload-info li) form {
    display: none;
  }

  .loading-ellipsis span {
    animation-duration: 1.5s;
    animation-iteration-count: infinite;
    margin: 0 -2px;
  }
  .loading-ellipsis span:nth-of-type(1) {
    animation-name: rb-ellipsis-1;
  }
  .loading-ellipsis span:nth-of-type(2) {
    animation-name: rb-ellipsis-2;
  }
  .loading-ellipsis span:nth-of-type(3) {
    animation-name: rb-ellipsis-3;
  }
  @keyframes rb-ellipsis-1 {
    0% {
      opacity: 0;
    }
    24% {
      opacity: 0;
    }
    25% {
      opacity: 1;
    }
  }
  @keyframes rb-ellipsis-2 {
    0% {
      opacity: 0;
    }
    49% {
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
  }
  @keyframes rb-ellipsis-3 {
    0% {
      opacity: 0;
    }
    74% {
      opacity: 0;
    }
    75% {
      opacity: 1;
    }
  }

</style>
