"""add User and UserCollection

Revision ID: b73e61d59c3e
Revises: 6adc0f3cea8f
Create Date: 2025-05-27 09:59:39.257185

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b73e61d59c3e"  # pragma: allowlist secret
down_revision: Union[str, None] = "6adc0f3cea8f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "usercollection",
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("role", sa.Enum("MANAGER", "MEMBER", name="role"), nullable=False),
        sa.Column("collection_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["collection_id"],
            ["collection.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "collection_id"),
    )
    op.add_column("collection", sa.Column("created_at", sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("collection", "created_at")
    op.drop_table("usercollection")
    op.drop_table("user")
    # ### end Alembic commands ###
